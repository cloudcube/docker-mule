#!/bin/bash


source m2dcommon


# *** Functions ***

function assertArgumentList {
    [[ -z "$1" ]] && die "provide a valid, registered container name" "1"
} # assertArgumentList


function assertUserNeedsHelp {
    [[ "$1" == "help" ]] && die "dzap - stop a container and remove it from the local registry" "0"
} # assertUserNeedsHelp


function assertContainerIsRunning {
    local container="$1" 

    docker ps | awk -v "container=$container" 'BEGIN { status = 2; } $NF == container && NR > 1 { status = 0; exit(0); } END { exit(status); }'

    if [[ "$?" != "0" ]]
    then
        docker ps | awk 'NR > 1 { if (!found) printf("Containers:\n-----------\n"); print($NF); found = 1; } END { if (found) print(" "); }'
        die "Container: \"$container\" is not running, even if it's registered; manual removal required" "2"
    fi
} # assertContainerIsRunning


# *** main ***


echo "Zap a container out of existence"

container="$1"

assertArgumentList "$1"
assertUserNeedsHelp "$1"
assertContainerIsRunning "$container"

docker stop "$container" > /dev/null
docker rm "$container" > /dev/null

dockerStatus="$?"

if [[ "$dockerStatus" == "0" ]]
then
    echo "Container: \"$container\" stopped and removed from the local registry"
    exit 0
else
    die "Container: \"$container\" removal failed -- docker rm return code = $dockerStatus" "3"
fi

